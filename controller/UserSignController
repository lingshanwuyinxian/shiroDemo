package shiroDemo.controller;

import java.io.IOException;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.authc.ExcessiveAttemptsException;
import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.LockedAccountException;
import org.apache.shiro.authc.UnknownAccountException;
import org.apache.shiro.authc.UsernamePasswordToken;
import org.apache.shiro.subject.Subject;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSONObject;
import shiroDemo.service.UserSignService;
import shiroDemo.AuthoenticException;
import shiroDemo.util.JsonResult;
import shiroDemo.User;

@RestController
@RequestMapping(value = "/userSign")
public class UserSignController {
	@Resource
	private UserSignService userSignService;

	@PostMapping("/login")
	public JSONObject login(String userName, String password) {
		Subject subject = SecurityUtils.getSubject();
		UsernamePasswordToken token = new UsernamePasswordToken(userName, password);
		try {
			subject.login(token);
		} catch (AuthoenticException e) {
			String mString = e.getMessage();
			if ("1".equals(mString)) {
				return JsonResult.fail('1');
			}
			if ("2".equals(mString)) {
				return JsonResult.fail('2');
			}
		} catch (UnknownAccountException uae) {
			return JsonResult.fail("1");
		} catch (IncorrectCredentialsException ice) {
			return JsonResult.fail("1");
		} catch (LockedAccountException lae) {
			return JsonResult.fail("账户已锁定");
		} catch (ExcessiveAttemptsException eae) {
			return JsonResult.fail("错误次数过多");
		}
		if (subject.isAuthenticated()) {
			String userCode = subject.getPrincipal().toString();
			String serializable = subject.getSession().getId().toString();
			List<User> userActions = userSignService.db1selectAction(userCode);
			if ("admin".equals(subject.getPrincipal())) {
        // Json工具类，JsonResult.success（arg0,arg1,arg2）：自定义重载方法;arg0:token,arg1:obj,arg2:userId
				return JsonResult.success(null, null, subject.getPrincipal());
			}
			return JsonResult.success(null, userActions);
		} else {
			token.clear();
			return JsonResult.fail("1");
		}

	}
}
