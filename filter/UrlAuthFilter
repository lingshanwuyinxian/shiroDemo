/**
* @author XiangZhi Ning
* @version 创建时间：2020年5月21日 上午11:09:38
* 
*/
package shiroDemo.fliter;

import javax.servlet.Filter;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.web.filter.authc.FormAuthenticationFilter;

import shiroDemo.AuthoenticException;

public class UrlAuthFilter extends FormAuthenticationFilter implements Filter{

	    public UrlAuthFilter() {
	        super();
	    }
	    @Override
	    public boolean isAccessAllowed(ServletRequest request, ServletResponse response, Object mappedValue) {
	    	HttpServletResponse mresponse = (HttpServletResponse) response;
	        HttpServletRequest mrequest = (HttpServletRequest) request;
	        mresponse.setHeader("Access-Control-Allow-Origin", mrequest.getHeader("Origin"));
	        mresponse.setHeader("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept, If-Modified-Since, x-token");
	        mresponse.setHeader("Access-Control-Allow-Methods", "POST, GET, OPTIONS, DELETE");
	        mresponse.setHeader("Access-Control-Max-Age", "3600");
	        mresponse.addHeader("Access-Control-Allow-Credentials", "true");
          // 跨域
	            if (mrequest.getMethod().toUpperCase().equals("OPTIONS")) {
	                return true;
	            }
              // 放行登录请求
	            if (mrequest.getServletPath().equals("/") ||mrequest.getServletPath().equals("/userSign/login")) {
	            	 return super.isAccessAllowed(mrequest, mresponse, mappedValue);
				}else {
         // 允许已授权用户访问 /get方法
					if (mrequest.getServletPath().indexOf("/get")>0) {
						 return super.isAccessAllowed(mrequest, mresponse, mappedValue);
				}
				}
	   return super.isAccessAllowed(mrequest, mresponse, mappedValue);
	    }
	    @Override
	    protected boolean onAccessDenied(ServletRequest request, ServletResponse response) throws Exception {
	       throw new AuthoenticException("1");
	    }
		@Override
		public void destroy() {
			
		}
}
